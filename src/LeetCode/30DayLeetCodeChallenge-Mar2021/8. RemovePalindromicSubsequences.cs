/*
#1332 - https://leetcode.com/problems/remove-palindromic-subsequences/

Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.

 

Example 1:

Input: s = "ababa"
Output: 1
Explanation: String is already palindrome
Example 2:

Input: s = "abb"
Output: 2
Explanation: "abb" -> "bb" -> "". 
Remove palindromic subsequence "a" then "bb".
Example 3:

Input: s = "baabb"
Output: 2
Explanation: "baabb" -> "b" -> "". 
Remove palindromic subsequence "baab" then "b".
Example 4:

Input: s = ""
Output: 0
 

Constraints:

0 <= s.length <= 1000
s only consists of letters 'a' and 'b'
   Hide Hint #1  
Use the fact that string contains only 2 characters.
   Hide Hint #2  
Are subsequences composed of only one type of letter always palindrome strings ?
*/

public class RemovePalindromicSubsequences
{
    public int RemovePalindromeSub(string s)
    {
        if (s.Equals(""))
        {
            return 0;
        }

        if (!IsPalindrome(s))
        {
            return 2;
        }

        return 1;
    }

    private bool IsPalindrome(string s)
    {
        int start = 0, end = s.Length - 1;
        while (start < end)
        {
            if (s[start++] != s[end--])
            {
                return false;
            }
        }

        return true;
    }
}